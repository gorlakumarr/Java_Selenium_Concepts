	select * from gdp_owner.prvcy_rqst order by prvcy_rqst_id desc;
	Default Contraint
	Unique Contraint
	Normalization is the process of Reducing data redundancy by organizing fields and tables of database.
	Denormalization is the process of adding redundant data to spped up the complex queries.
	select max(prvcy_rqst_id) from gdp_owner.prvcy_rqst where prvcy_rqst_id not in (select max(prvcy_rqst_id) from gdp_owner.prvcy_rqst);
	select gender ,avg(age) from employees where avg(age)>30 group by gender;
whenever we working with aggregate functions we cant use where caluse, we would have use group by and having clause.
	Stuff(String1,position,length,string2)
SELECT STUFF('SQL Tutorial', 1, 3, 'HTML'); :HTML Tutorial
	What is View ?
create view rqst_stat_cd as select * from gdp_owner.prvcy_rqst where rqst_stat_cd='PR';
	What is stored procedure?
A SP is prepared SQL Code which can be saved and reused
create procedure prvcy_rqst_sample
as
select prvcy_rqst_id from gdp_owner.prvcy_rqst order by prvcy_rqst_id desc;
GO;

Exec gdp_owner.prvcy_rqst_sample;
	Join :
o	Inner Join
o	Left Join
o	Right Join
o	Full Join

select gdp_owner.prvcy_rqst.prvcy_rqst_id,gdp_owner.serv_func_prvcy_rqst.serv_func_cd 
from gdp_owner.prvcy_rqst
inner join gdp_owner.serv_func_prvcy_rqst
on gdp_owner.prvcy_rqst.prvcy_rqst_id=gdp_owner.serv_func_prvcy_rqst.prvcy_rqst_id;

	Temporary tables are created in tempDB and deleted as soon as the session is terminated.
Create table #[table_name]
	OLTP and OLAP?
Online Transaction Processing 
Online Analytical Processing
	Delete and truncate?
	DML and DDL
Delete from gdp_owner. prvcy_rqst [where condition]
truncate gdp_owner.prvcy_rqst cascade;
	Union and Union All:
Union : used to combine two or more select stmts. unique
Union all:  include duplicate also
	Intersect Operator
	How can you copy data from one table to another table?

Insert into [table_duplicate] select * from [table];

SELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, A.City
FROM Customers A, Customers B
WHERE A.CustomerID <> B.CustomerID
AND A.City = B.City
ORDER BY A.City;


